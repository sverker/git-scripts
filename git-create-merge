#!/usr/bin/env bash

force_ours="no"
force_theirs="no"

while (( "$#" )); do

    if [ "$1" == "-f1" ]; then
	force_ours="yes"
    elif [ "$1" == "-f2" ]; then
	force_theirs="yes"
    else
	break;
    fi

    shift
done

if [ "$#" != 2 ]; then
        echo
        echo "Create a merge commit for current branch"
	echo "with current content (staged and commited)"
	echo "and specified parents."
	echo
        echo "Syntax: git-create-merge <ours-parent> <theirs-parent>"
        echo
        exit 1
fi

ours_sha="$(git rev-parse --verify --quiet $1)"
if [ $? -ne 0 ]
then
    echo
    echo "ERROR: First argument '$1' is not a known commit"
    echo
    exit 1
fi

theirs_sha="$(git rev-parse --verify --quiet $2)"
if [ $? -ne 0 ]
then
    echo
    echo "ERROR: Second argument '$2' is not a known commit"
    echo
    exit 1
fi

if [ "$ours_sha" = "$theirs_sha" ]; then
    echo
    echo "ERROR: Arguments '$1' and '$2' are same commit $ours_sha"
    echo
    exit 1
fi

branch="$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)"

if [ "$branch" = "HEAD" ]; then
    echo
    echo "ERROR: Detached head"
    echo
    exit 1
fi

if [ "$force_ours" != "yes" ] && ! git merge-base --is-ancestor $1 $branch; then
   echo
   echo "ERROR: Proposed first parent '$1' is not reachable from '$branch'"
   echo "       Override with option -f1"
   echo
   exit 1
fi

if [ "$force_theirs" != "yes" ] && ! git merge-base --is-ancestor $2 $branch; then
   echo
   echo "ERROR: Proposed second parent '$2' is not reachable from '$branch'"
   echo "       Override with option -f2"
   echo
   exit 1
fi

git reset --soft $ours_sha
git update-ref MERGE_HEAD $theirs_sha
git commit --edit -m "Merge '$2' into '$branch'"
